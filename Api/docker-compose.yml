services:
  api:
    build:
      context: .
      dockerfile: Api/Dockerfile
    depends_on:
      - mysql
    networks:
      - internal-network
      - app-network

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ../db-init:/docker-entrypoint-initdb.d
      - dbdata:/var/lib/mysql
    networks:
      - internal-network

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - "8000:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - mysql
    networks:
      - internal-network

  front:
    build:
      context: ../front/pinterhess
      dockerfile: ./Dockerfile
    ports:
      - "9000:80"
    networks:
      - app-network
    volumes:
      - ../gallery_images:/usr/share/nginx/html/images

volumes:
  dbdata:


networks:
  internal-network:
    driver: bridge
  app-network:
    driver: bridge
